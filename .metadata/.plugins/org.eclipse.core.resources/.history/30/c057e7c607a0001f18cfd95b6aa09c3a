<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<!-- DAOImpl() 없음. => namespace="다오인터페이스명" id="메서드명" -->
<mapper namespace="com.ezen.spring.dao.BoardDAO">
	<insert id="insert">
		insert into board(title, writer, content)
		values(#{title}, #{writer}, #{content})
	</insert>
	<select id="getList" resultType="com.ezen.spring.domain.BoardVO">
		select * from board
		where is_del = 'N'
		<include refid="search"></include>
		order by bno desc
		limit #{pageStart}, #{qty}
	</select>
	<select id="getDetail" resultType="com.ezen.spring.domain.BoardVO">
		select * from board
		where bno = #{bno}
	</select>
	<update id="update">
		update board set title=#{title}, content=#{content}
		where bno = #{bno}
	</update>
	<update id="delete">
		update board set is_del = 'Y'
		where bno = #{bno}
	</update>
	<select id="getTotal" resultType="int">
		select count(bno) from board where is_del = 'N'	
		<include refid="search"></include>
	</select>
	<select id="getOneBno" resultType="long">
		select max(bno) from board
	</select>
	<update id="readCountUp">
		update board set read_count = read_count + 1 
		where bno = #{bno}
	</update>
	<update id="cmtQtyUpdate">
		update board set cmt_qty = cmt_qty + #{cnt}
		where bno = #{bno}
	</update>
	<update id="hasFileUpdate">
		update board set has_file = has_file + #{cnt}
		where bno = #{bno}
	</update>
	
	<!-- search 동적 쿼리 -->
	
	<!-- 
		select * from board
		where is_del = 'N' 
		and ( title like concat('%', keyword, '%') or
		      writer like concat('%', #{keyword}, '%') or
		      content like concat('%', #{keyword}, '%') )
		order by bno desc
		limit #{pageStart}, #{qty}
	 -->
	<sql id="search">
		<if test="type!=null">
			<trim prefix="and (" suffix=")" suffixOverrides="or">
				<foreach collection="typeToArray" item="type">
					<trim suffix="or" >
						<choose>
							<when test="type == 't'.toString()">
								title like concat('%', #{keyword}, '%')
							</when>
							<when test="type == 'w'.toString()">
								writer like concat('%', #{keyword}, '%')
							</when>
							<when test="type == 'c'.toString()">
								content like concat('%', #{keyword}, '%')
							</when>
						</choose>
					</trim>
				</foreach>
			</trim>
		</if>
	</sql>
</mapper>